{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","get_movies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Navigation","Detail","props","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"ySAceA,MAXf,WACI,OACI,sBAAKC,UAAY,mBAAjB,UACI,4SAGA,2E,gFC6BGC,MAjCf,YAAuD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACI,qBAAKN,UAAY,QAAjB,SACI,eAAC,IAAD,CACIO,GAAM,CACFC,SAAU,gBACVC,MAAO,CAACN,OAAMD,QAAOE,UAASC,SAAQC,WAH9C,UAMA,qBAAKI,IAAOL,EAAQM,IAAOT,EAAOA,MAASA,IAC3C,sBAAKF,UAAY,cAAjB,UACI,oBAAIA,UAAY,eAAhB,SAAgCE,IAChC,oBAAIF,UAAY,cAAhB,SAA+BG,IAC/B,oBAAIH,UAAY,gBAAhB,SACKM,EAAOM,KAAI,SAACC,EAAOC,GAChB,OAAO,oBAAgBd,UAAY,eAA5B,SAA4Ca,GAAnCC,QAGxB,oBAAGd,UAAY,iBAAf,UAAiCI,EAAQW,MAAM,EAAE,KAAjD,kBC6BDC,G,kNA9CbP,MAAQ,CACNQ,WAAW,EACXC,OAAO,I,EAGTC,W,sBAAa,8BAAAC,EAAA,sEAKDC,IAAMC,IAAI,4DALT,gBAGEJ,EAHF,EAETK,KACEA,KAASL,OAGb,EAAKM,SAAS,CAACN,SAAQD,WAAY,IANxB,2C,kEAUXQ,KAAKN,e,+BAGE,IAAD,EACsBM,KAAKhB,MAA1BQ,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACE,yBAASlB,UAAY,YAArB,SACGiB,EACC,qBAAKjB,UAAY,SAAjB,SACE,sBAAMA,UAAY,eAAlB,4BAGE,qBAAKA,UAAY,SAAjB,SACCkB,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEEC,GAAMD,EAAMC,GACZxB,KAAQuB,EAAMvB,KACdD,MAASwB,EAAMxB,MACfE,QAAWsB,EAAMtB,QACjBC,OAAUqB,EAAME,mBAChBtB,OAAUoB,EAAMpB,QANToB,EAAMC,e,GA/BZE,IAAMC,Y,MCYVC,MATf,WACI,OACI,sBAAK/B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMO,GAAK,IAAX,kBACA,cAAC,IAAD,CAAMA,GAAK,SAAX,uBCSGyB,E,kLAjBQ,MACeP,KAAKQ,MAA3BC,EADO,EACPA,SAAUC,EADH,EACGA,aACIC,IAAnBF,EAASzB,OACR0B,EAAQE,KAAK,O,+BAIZ,IACEH,EAAYT,KAAKQ,MAAjBC,SACP,OAAGA,EAASzB,MACD,qCAAQyB,EAASzB,MAAMP,MAAvB,OAEA,S,GAbE2B,IAAMC,WCgBZQ,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAS,EAAMC,UAAWzB,IAC1C,cAAC,IAAD,CAAOuB,KAAK,SAASE,UAAW1C,IAChC,cAAC,IAAD,CAAOwC,KAAK,gBAAgBE,UAAWT,QCV7CU,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.207aed6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className = \"about__container\">\r\n            <span>\r\n                \"라우터 공부 완료. 라우터란 쉽게 말하면 URL에 맞게 화면을 이동시켜주는 장치! 클론 코딩... 성장률 1% 인듯..?\"\r\n            </span>\r\n            <span>- https://kimtaehyun98.tistory.com/</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Movie({title, year, summary, poster, genres}){\r\n    return (\r\n        <div className = \"movie\">\r\n            <Link \r\n                to = {{\r\n                    pathname: '/movie-detail',\r\n                    state: {year, title, summary, poster, genres},\r\n                }}\r\n            >\r\n            <img src = {poster} alt = {title} title = {title} />\r\n            <div className = \"movie__data\">\r\n                <h3 className = \"movie__title\">{title}</h3>\r\n                <h5 className = \"movie__year\">{year}</h5>\r\n                <ul className = \"movie__genres\">\r\n                    {genres.map((genre, index)=>{\r\n                        return <li key={index} className = \"movie__genre\">{genre}</li>;\r\n                    })}\r\n                </ul>\r\n                <p className = \"movie__summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = { \r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired,\r\n };\r\n\r\nexport default Movie; ","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: false,\r\n    movies:[], // 영화 객체들이 저장되어 있는 배열\r\n  };\r\n  \r\n  get_movies = async() => {\r\n    const {\r\n      data: {\r\n        data : { movies },\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');  // axios로 API 호출, 반환된 데이터를 movies에 저장, 평점 순으로 정렬\r\n    this.setState({movies, isLoading : false}); // 데이터를 다 받아왔으니 준비가 됨!\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.get_movies();\r\n  }\r\n\r\n  render(){\r\n    const {isLoading, movies} = this.state;\r\n    return (\r\n      <section className = \"container\">\r\n        {isLoading ? (\r\n          <div className = \"loader\">\r\n            <span className = \"loader__text\">'Loading...'</span> \r\n            </div>\r\n            ) : (\r\n              <div className = \"movies\"> \r\n              {movies.map((movie) => (\r\n                <Movie \r\n                  key = {movie.id}\r\n                  id = {movie.id}\r\n                  year = {movie.year}\r\n                  title = {movie.title}\r\n                  summary = {movie.summary}\r\n                  poster = {movie.medium_cover_image}\r\n                  genres = {movie.genres}\r\n                />\r\n          ))}\r\n        </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\n// react-router-dom을 사용하는 이유 :\r\n// <a href> 를 사용하면 페이지 전체를 다시 그림 -> 즉 클릭할때마다 리액트가 죽고 새 페이지가 열림\r\n// 필요한 부분만 다시 그려주는 리액트의 장점 활용 X\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to = \"/\">Home</Link>\r\n            <Link to = \"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react'\r\n\r\n// \r\nclass Detail extends React.Component {\r\n    componentDidMount(){ // Detail 컴포넌트가 마운드되면\r\n        const { location, history } = this.props; // 구조 분해 할당으로 location, history를 얻고\r\n        if(location.state === undefined) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {location} = this.props;\r\n        if(location.state){\r\n            return <span> {location.state.title} </span>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact = {true} component={Home}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/movie-detail\" component={Detail}/>\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}